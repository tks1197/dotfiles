#!/usr/bin/env bash
set -euxo pipefail
{{ if eq .chezmoi.os "darwin" }}
# MacOS Settings(defaults CLI)
## 再起動によって設定がもとに戻ってしまう場合は、Terminalがフルディスクアクセスがついているか確認する。
## Dock Settings
defaults write com.apple.dock autohide -bool true &&
    defaults write com.apple.dock no-bouncing -bool TRUE &&
    defaults write com.apple.dock autohide-delay -float 0 &&
    ## 最近使用したアプリのDock表示を無効化
    defaults write com.apple.dock show-recents -bool false && killall Dock

## .DS_Storeの抑制
defaults write com.apple.desktopservices DSDontWriteUSBStores -bool true
defaults write com.apple.desktopservices DSDontWriteNetworkStores true

## screencapture
defaults write com.apple.screencapture name ""

## Finderの隠しファイルはすべて表示
defaults write com.apple.finder AppleShowAllFiles -bool true && killall Finder

## Key周り
defaults write NSGlobalDomain ApplePressAndHoldEnabled -bool false
defaults write NSGlobalDomain KeyRepeat -int 2
defaults write NSGlobalDomain InitialKeyRepeat -int 15

## MacOS(sonoma)から登場したテキストカーソルを無効化
defaults write kCFPreferencesAnyApplication TSMLanguageIndicatorEnabled 0

## 自然なスクロールを無効化
defaults write NSGlobalDomain com.apple.swipescrolldirection -bool false

# disable spotlight
## https://gist.github.com/adamstac/1249295
sudo launchctl unload -w /System/Library/LaunchDaemons/com.apple.metadata.mds.plist

# AutoHide MenuBar(Terminal Restaat Required)
defaults write NSGlobalDomain _HIHideMenuBar -bool true

# darkmodeの適用
## https://simonewebdesign.it/how-to-enable-dark-mode-macos-command-line/
osascript -e 'tell app "System Events" to tell appearance preferences to set dark mode to not dark mode'

# git secrets
git secrets --install --force ~/.config/git/template/

# rustup
if ! command -v rustup > /dev/null; then
    echo "rustup not found. installing..."
    RUST_UP_HOME=$HOME/.local/bin/rustup curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --no-modify-path \
    && rustup component add rust-analyzer
fi
# devpod CLI
# https://devpod.sh/docs/getting-started/install#optional-install-devpod-cli

if ! command -v devpod > /dev/null; then
    echo "devpod not found. installing..."
    DEVPOD_DIR=$HOME/.local/share/devpod
    mkdir -p $DEVPOD_DIR
    DEVPOD_HOME=$DEVPOD_DIR curl -L -o devpod "https://github.com/loft-sh/devpod/releases/latest/download/devpod-darwin-arm64" && sudo install -c -m 0755 devpod $HOME/.local/bin/ && rm -f devpod
fi

# TPM(Tmux Plugin Manager)
## https://github.com/tmux-plugins/tpm?tab=readme-ov-file#installation
TPM_INSTALL_DIR=$HOME/.local/share/tpm
if [ ! -d "$TPM_INSTALL_DIR" ]; then
  git clone https://github.com/tmux-plugins/tpm "$TPM_INSTALL_DIR"
fi

# tmux catppuccino
CATPUCCHINO_DIR=$HOME/.config/tmux/plugins/catppuccin
if [ ! -d "$CATPUCCHINO_DIR" ]; then
  git clone -b v2.1.2 https://github.com/catppuccin/tmux.git "$CATPUCCHINO_DIR"
fi

# tmuxinator
mise use -g ruby@3.3.6
if ! command -v tmuxinator &> /dev/null; then
  printf 'Install tmuxinator...\n'
  gem install tmuxinator --bindir $HOME/.local/bin
fi

# SKK Setup
## SKK SKK_USER_DICT
mkdir -p ~/.config/skk

## download skk directory
mkdir -p ~/.local/share/skk/

{{ end -}}
